
package org.csapi.wsdl.parlayx.ussd.send.v1_0.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SendUssdService", targetNamespace = "http://www.csapi.org/wsdl/parlayx/ussd/send/v1_0/service", wsdlLocation = "file:/C:/Users/akin.oyedotun/Documents/Dml/MNOGateway/src/conf/xml-resources/web-services/SendUssd/wsdl/osg_ussd_send_service_1_0.wsdl")
public class SendUssdService
    extends Service
{

    private final static URL SENDUSSDSERVICE_WSDL_LOCATION;
    private final static WebServiceException SENDUSSDSERVICE_EXCEPTION;
    private final static QName SENDUSSDSERVICE_QNAME = new QName("http://www.csapi.org/wsdl/parlayx/ussd/send/v1_0/service", "SendUssdService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/akin.oyedotun/Documents/Dml/MNOGateway/src/conf/xml-resources/web-services/SendUssd/wsdl/osg_ussd_send_service_1_0.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SENDUSSDSERVICE_WSDL_LOCATION = url;
        SENDUSSDSERVICE_EXCEPTION = e;
    }

    public SendUssdService() {
        super(__getWsdlLocation(), SENDUSSDSERVICE_QNAME);
    }

    public SendUssdService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SENDUSSDSERVICE_QNAME, features);
    }

    public SendUssdService(URL wsdlLocation) {
        super(wsdlLocation, SENDUSSDSERVICE_QNAME);
    }

    public SendUssdService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SENDUSSDSERVICE_QNAME, features);
    }

    public SendUssdService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SendUssdService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SendUssd
     */
    @WebEndpoint(name = "SendUssd")
    public SendUssd getSendUssd() {
        return super.getPort(new QName("http://www.csapi.org/wsdl/parlayx/ussd/send/v1_0/service", "SendUssd"), SendUssd.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SendUssd
     */
    @WebEndpoint(name = "SendUssd")
    public SendUssd getSendUssd(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.csapi.org/wsdl/parlayx/ussd/send/v1_0/service", "SendUssd"), SendUssd.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SENDUSSDSERVICE_EXCEPTION!= null) {
            throw SENDUSSDSERVICE_EXCEPTION;
        }
        return SENDUSSDSERVICE_WSDL_LOCATION;
    }

}
